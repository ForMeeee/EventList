/* eslint-disable @next/next/no-img-element */
import React, { useEffect, useState } from "react";
import Head from "next/head";
import CardEvent from "../../components/CardEvent";
import Footer from "../../components/Footer";
import Navbar from "../../components/Navbar";
import Statistics from "../../components/Statistics";
import Stories from "../../components/Stories";
import { useRouter } from "next/router";
import { getData } from "../../utils/fetchData";
import moment from "moment";
import { formatDate } from "../../utils/formatDate";
import Cookies from "js-cookie";
import { Button } from "react-bootstrap";

export default function DetailPage({ detailPage, id }) {
  const [data, setData] = useState([]);
  useEffect(() => {
    const fetchData = async () => {
      try {
        const res = await getData("api/v1/events");

        setData(res.data);
      } catch (err) { }
    };

    fetchData();
    console.log(detailPage)
  }, []);

  const router = useRouter();

  const handleSubmit = (ticketId, organizer) => {
    const token = Cookies.get("token");
    if (!token) {
      return router.push("/signin");
    } else {
      router.push(
        `/checkout/${id}?ticketId=${ticketId}&organizer=${organizer}`
      );
    }
  };
  return (
    <>
      <Head>
        <title>EventList || Detail Page</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <section className="bg-navy">
        <Navbar />
      </section>

      <div className="preview-image bg-navy text-center">
        <img
          src={
            detailPage.image?.name ?
              process.env.NEXT_PUBLIC_API_IMAGE + '/' + detailPage.image.name
              : '/images/details-image.png'
          }
          className="img-content"
          alt="EventList"
        />
      </div>
      <div className="details-content container">
        <div className="d-flex flex-wrap justify-content-lg-center gap">
          <div className="d-flex flex-column description">
            <div className="headline">{detailPage.title}</div>

            <div className="d-flex align-items-center text-light">
              <img src="/icons/ic-marker.svg" alt="EventList" />{" "}
              {detailPage.venueName}
            </div>
            <div className="d-flex align-items-center text-light">
              <img src="/icons/ic-time.svg" alt="EventList" />{" "}
              {formatDate(detailPage.date)} {moment(detailPage.date).format("HH.MM A")}
            </div>
            <br />
            <div className="event-details">
              <h6>Event Details</h6>
              <p className="details-paragraph">{detailPage.about}</p>
            </div>
            <div className="keypoints">
              {detailPage.keyPoint.map((key, i) => {
                return (
                  <div className="d-flex align-items-start gap-3" key={i}>
                    <img src="/icons/ic-check.svg" alt="EventList" />
                    <span>{key}</span>
                  </div>
                );
              })}
            </div>
            <div className="map-location">
              <h6>Event Location</h6>
              <div className="map-placeholder">
                <div className="maps">
                  <img src="/images/maps.png" alt="" />
                  <div
                    className="absolute d-flex justify-content-center align-items-center"
                    id="hoverMe"
                  >
                    <a href="#" className="btn-navy" id="btn-maps">
                      View in Google Maps
                    </a>
                  </div>
                </div>
              </div>
            </div>
          </div>

          <div className="d-flex flex-column card-event">
            <div className="p-4">
              <h6>Your Speaker</h6>
              <div className="d-flex align-items-center gap-3 mt-3">
                <img
                  src={`${process.env.NEXT_PUBLIC_API}/${detailPage?.talent?.image?.name}`}
                  alt="EventList"
                  width="60"
                />
                <div>
                  <div className="speaker-name">{detailPage?.talent?.name}</div>
                  <span className="occupation">{detailPage?.talent?.role}</span>
                </div>
              </div>
            </div>
            <h6 className="p-4 border-top border-bottom">Ticket Category</h6>
            <div className="px-4 py-2 tickets">
              {detailPage.tickets.map((ticket) => (
                <>
                  {ticket.statusTicketCategories ? (
                    <div key={ticket._id} className="card border m-2">
                      <div className={`card-body border-start border-5 rounded-2 ` + (detailPage.stock !== 0 ? `border-success` : `border-danger`)}>
                        <div className="row">
                          <div className="col col-12 col-lg-8">
                            <p className="type">{ticket.type}</p>
                            <div className="price">
                              {ticket.price === 0 ? "free" : `Rp${ticket.price}`}
                              <span>/person</span>
                            </div>
                          </div>
                          <div className="col col-12 col-lg-4 d-flex align-content-center flex-wrap">
                            {detailPage.stock !== 0 ? <>

                              <Button
                                variant={"success"}
                                onClick={() =>
                                  handleSubmit(ticket._id, detailPage.organizer)
                                }
                              >
                                Join Now
                              </Button>

                            </> : <Button
                              variant={"secondary"}
                            >
                              Sold Out
                            </Button>}
                          </div>
                        </div>
                      </div>
                    </div>
                  ) : (
                    ""
                  )}
                </>
              ))}
            </div>


            {/* {detailPage.tickets.map((ticket) => (
              <div key={ticket._id}>
                {ticket.statusTicketCategories ? (
                  <>
                    <div className="price my-3">
                      {ticket.price === 0 ? "free" : `Rp${ticket.price}`}
                      <span>/person</span>
                    </div>
                    <div className="d-flex gap-3 align-items-center card-details">
                      <img src="/icons/ic-marker.svg" alt="EventList" />{" "}
                      {detailPage.venueName}
                    </div>
                    <div className="d-flex gap-3 align-items-center card-details">
                      <img src="/icons/ic-time.svg" alt="EventList" />{" "}
                      {moment(detailPage.date).format("HH.MM A")}
                    </div>
                    <div className="d-flex gap-3 align-items-center card-details">
                      <img src="/icons/ic-calendar.svg" alt="EventList" />{" "}
                      {formatDate(detailPage.date)}
                    </div>

                    {detailPage.stock !== 0 && (
                      <Button
                        variant={"btn-green"}
                        action={() =>
                          handleSubmit(ticket._id, detailPage.organizer)
                        }
                      >
                        Join Now
                      </Button>
                    )}
                  </>
                ) : (
                  ""
                )}
              </div>
            ))} */}

            <hr />
          </div>
        </div>
      </div>

      <CardEvent data={data} title="Similiar Events" subTitle="Next One" />
      <Stories />
      <Statistics />
      <Footer />
    </>
  );
}

export async function getServerSideProps(context) {
  const req = await getData(`api/v1/events/${context.params.id}`);

  const res = req.data;
  console.log(res);

  return {
    props: { detailPage: res, id: context.params.id },
  };
}